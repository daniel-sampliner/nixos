# SPDX-FileCopyrightText: 2024 - 2025 Daniel Sampliner <samplinerD@gmail.com>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: build

on:
  push:
    paths:
      - '**'
      - '!.github/**'
      - '.github/workflows/build.yaml'
      - '.github/workflows/check.yaml'
      - '.github/workflows/gen-jobs.yaml'
    branches:
      - '**'
      - '!nix-update/**'
      - 'nix-update/pr'

  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: >-
    ${{ github.workflow }}-
    ${{ contains(fromJSON('["main", "nix-update/pr"]'), github.ref_name)
      && github.ref
      || github.sha }}

jobs:
  cache-flake:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
      - uses: cachix/cachix-action@v15
        with:
          name: ${{ github.repository_owner }}
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          skipPush: true

      - name: cache flake
        run: |
          nix flake archive --json \
            | jq -r '.path, (.inputs | to_entries[].value.path)' \
            | cachix push "${GITHUB_REPOSITORY_OWNER:?}"

  cachix-pushfilter:
    runs-on: ubuntu-latest
    outputs:
      regexp: ${{ steps.pushfilter.outputs.regexp }}

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
      - uses: cachix/cachix-action@v15
        with:
          name: ${{ github.repository_owner }}
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          skipPush: true

      - name: evaluate push filter
        id: pushfilter
        run: |
          system=$(nix config show system)
          regexp=$(nix eval --raw ".#github.${system:?}.cachixPushFilter")
          echo "regexp=${regexp:?}" | tee -a "${GITHUB_OUTPUT:?}"

  gen-checks:
    uses: ./.github/workflows/gen-jobs.yaml
    secrets: inherit
    with:
      type: checks

  check:
    if: ${{ needs.gen-checks.outputs.jobs != '[]' }}
    needs:
      - cachix-pushfilter
      - gen-checks

    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(needs.gen-checks.outputs.jobs) }}

    uses: ./.github/workflows/check.yaml
    secrets: inherit
    with:
      check: ${{ matrix.check }}
      pushFilter: ${{ needs.cachix-pushfilter.outputs.regexp }}

  gen-nixoss:
    uses: ./.github/workflows/gen-jobs.yaml
    secrets: inherit
    with:
      nix-eval-jobs: false
      type: nixoss

  nixos:
    if: ${{ needs.gen-nixoss.outputs.jobs != '[]' }}
    needs:
      - cachix-pushfilter
      - gen-nixoss

    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(needs.gen-nixoss.outputs.jobs) }}

    uses: ./.github/workflows/check.yaml
    secrets: inherit
    with:
      check: ${{ matrix.check }}
      pushFilter: ${{ needs.cachix-pushfilter.outputs.regexp }}

  gen-homes:
    uses: ./.github/workflows/gen-jobs.yaml
    secrets: inherit
    with:
      type: homes

  home:
    if: ${{ needs.gen-homes.outputs.jobs != '[]' }}
    needs:
      - cachix-pushfilter
      - gen-homes

    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(needs.gen-homes.outputs.jobs) }}

    uses: ./.github/workflows/check.yaml
    secrets: inherit
    with:
      check: ${{ matrix.check }}
      pushFilter: ${{ needs.cachix-pushfilter.outputs.regexp }}

  gen-containers:
    uses: ./.github/workflows/gen-jobs.yaml
    secrets: inherit
    with:
      nix-eval-jobs: false
      type: containers

  containers:
    if: ${{ needs.gen-containers.outputs.jobs != '[]' }}
    runs-on: ubuntu-latest

    permissions:
      packages: write

    needs:
      - cachix-pushfilter
      - gen-containers

    strategy:
      fail-fast: false
      matrix:
        check: ${{ fromJSON(needs.gen-containers.outputs.jobs) }}

    env:
      CHECK: ${{ matrix.check }}

    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - uses: cachix/cachix-action@v15
        with:
          name: ${{ github.repository_owner }}
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          pushFilter: ${{ needs.cachix-pushfilter.outputs.regexp }}

      - name: build
        run: |
          system=$(nix config show system)
          INSTALLABLE=".#checks.${system:?}.${CHECK:?}"
          nix -L build --keep-going "$INSTALLABLE" "$INSTALLABLE.copyTo"

          echo "INSTALLABLE=$INSTALLABLE" | tee -a "${GITHUB_ENV:?}"

      - name: push to ghcr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          nix -L run .#push-to-registry

  success:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs:
      - check
      - containers
      - home
      - nixos
    steps:
      - name: success
        env:
          RESULTS: ${{ toJSON(needs.*.result) }}
        run: |-
          jq -e 'length > 0 and all(. == "success" or . == "skipped")' \
            <<<"${RESULTS:?}"
