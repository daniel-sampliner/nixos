# SPDX-FileCopyrightText: 2024 Daniel Sampliner <samplinerD@gmail.com>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

name: nix-flake-check

on:
  workflow_call:
    inputs:
      cache_ver:
        default: 1
        type: number
      nix_public_key:
        default: ${{ vars.nix_public_key }}
        type: string
    secrets:
      nix_secret_key:
        required: true

jobs:
  gen-matrix:
    uses: ./.github/workflows/list-nix-outputs.yaml
    secrets: inherit
    with:
      cache_ver: ${{ inputs.cache_ver }}
      flake_output: checks

  main:
    runs-on: ubuntu-latest
    needs: gen-matrix
    strategy:
      matrix:
        check: ${{ fromJSON(needs.gen-matrix.outputs.outputs) }}
    env:
      CHECK: ${{ matrix.check }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        with:
          path: ${{ runner.temp }}/cache-devshell
          key: nix-devshell-${{ hashFiles('flake.lock') }}-v${{ inputs.cache_ver}}
          fail-on-cache-miss: true

      - uses: ./.github/actions/setup-nix
        id: setup-nix
        with:
          cache_ver: ${{ inputs.cache_ver }}
          extra_substituters: file://${{ runner.temp }}/cache-devshell
          name: check-${{ matrix.check }}
          nix_public_key: ${{ inputs.nix_public_key }}
          nix_secret_key: ${{ secrets.nix_secret_key }}

      - name: check
        run: |
          system=$(nix eval --impure --raw --expr 'builtins.currentSystem')
          drv=".#checks.${system:?}.${CHECK:?}"
          nix -L build --keep-going "$drv"
          echo "DRV=$drv" >>"$GITHUB_ENV"

      - name: cache artifacts
        if: ${{ steps.setup-nix.outputs.cache-hit != 'true' }}
        run: |
          nix=$(command -v nix)
          sudo "${nix:?}" copy --to "${CACHE_URL:?}" "${DRV:?}"

  success:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs: main
    steps:
      - name: success
        env:
          RESULTS: ${{ toJSON(needs.*.result) }}
        run: |
          jq -e 'length > 0 and all(. == "success")' <<<"$RESULTS"
